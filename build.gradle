plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'back-end'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.google.com' } // Google's Maven Repository
    google()
}

configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Security & JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // 웹소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // redis 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // email 인증
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Hibernate 6.x, Jakarta Persistence 호환
    implementation 'org.hibernate:hibernate-core:6.0.0.Final'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Jsoup
    implementation 'org.jsoup:jsoup:1.16.1'

    // Retry
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // Database
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.icegreen:greenmail-junit5:2.1.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //googleCalendar
    implementation 'com.google.api-client:google-api-client:1.31.5'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-calendar:v3-rev411-1.25.0'

    //firebase
    implementation 'com.google.firebase:firebase-admin:9.1.0'

    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'

    implementation 'mysql:mysql-connector-java:8.0.33'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += '-parameters'
}

def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)

}
